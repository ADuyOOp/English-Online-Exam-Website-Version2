<!DOCTYPE html>
    <head>
    <title>Test Edit</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/list.css"> 
    <link rel="stylesheet" href="/css/test_compose_listening.css">
    </head>
    <body>
        <%- include('component/header') %>
        <h2><%=test_name%> <p></p></h2>
        <% var pathtest = path_test %>
        <% var audio = Test.Audio %>
        <% var image = Test.Image %>
        <% var arrQues = Test.ArrQues %>
        <% var coText = Test.CoText %>
        <% var partname = part_name %>
        <% var arrResult = arrResult %>

    <form method="post" action="/data/save" enctype="multipart/form-data">
        <div class="quiz-container">
            <% if (skill_name == "listening") { %>
                Upload new audio file: 
                <label for="audiofile" class="add-file-button">
                    <svg
                        aria-hidden="true"
                        stroke="currentColor"
                        stroke-width="2"
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                        stroke-width="2"
                        stroke="#fffffff"
                        d="M13.5 3H12H8C6.34315 3 5 4.34315 5 6V18C5 19.6569 6.34315 21 8 21H11M13.5 3L19 8.625M13.5 3V7.625C13.5 8.17728 13.9477 8.625 14.5 8.625H19M19 8.625V11.8125"
                        stroke-linejoin="round"
                        stroke-linecap="round"
                        ></path>
                        <path
                        stroke-linejoin="round"
                        stroke-linecap="round"
                        stroke-width="2"
                        stroke="#fffffff"
                        d="M17 15V18M17 21V18M17 18H14M17 18H20"
                        ></path>
                    </svg>
                    ADD FILE
                </label>
                <input type="file" id="audiofile" name="audiofile" accept="audio/*" style="display: none;" onchange="audio_load()">                    
                <p></p>
                Audio: <br>
                    <div class="audio-player">
                        <audio id="audio" controls name="audio" style="display: none;">
                            <source src="/audio/<%=audio%>" type="audio/ogg">
                            Your browser does not support the audio element.
                        </audio>
                        <button id="playPauseBtn" type="button" class="audio-button play-pause-btn">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="#ff7b5c">
                                <path d="M8 5v14l11-7z"/>
                            </svg>
                        </button>
                        <div id="timeDisplay" class="time-display">00:00 / 00:00</div>
                
                        <div id="progressBarContainer" class="progress-container">
                            <div id="progressBar" class="progress-bar"></div>
                        </div>
                        <button id="volumeBtn" type="button" class="audio-button">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="#666">
                                <path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02z"/>
                            </svg>
                        </button>
                    </div>
                        <input type="hidden" name="audiohidden" value="<%=audio%>"> 
                    <p></p>
                Update transcript for audio: <br>
                    <textarea name="text" rows="4" cols="100"><%=coText%></textarea> <p></p>

                <% if (part_name == "Photographs") { %>
                    <div style="display: flex; align-items: center; gap: 10px;">
                        Upload mew image file:
                        <label for="imagefile" class="add-file-button">
                        <svg
                            aria-hidden="true"
                            stroke="currentColor"
                            stroke-width="2"
                            viewBox="0 0 24 24"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                            stroke-width="2"
                            stroke="#fffffff"
                            d="M13.5 3H12H8C6.34315 3 5 4.34315 5 6V18C5 19.6569 6.34315 21 8 21H11M13.5 3L19 8.625M13.5 3V7.625C13.5 8.17728 13.9477 8.625 14.5 8.625H19M19 8.625V11.8125"
                            stroke-linejoin="round"
                            stroke-linecap="round"
                            ></path>
                            <path
                            stroke-linejoin="round"
                            stroke-linecap="round"
                            stroke-width="2"
                            stroke="#fffffff"
                            d="M17 15V18M17 21V18M17 18H14M17 18H20"
                            ></path>
                        </svg>
                        ADD FILE
                        </label>
                    </div>
                    <input type="file" id="imagefile" name="imagefile" accept="image/*" style="display: none;" onchange="image_load()"><br>  
                    <div class="image-container">
                        <img src= "/image/<%=image%>" name="image" id="image" width="500" height="500">
                        <input type="hidden" name="imagehidden" value="<%=image%>">
                        <!-- <img src="/assets/Placeholder-_-Glossary.svg" name="image" id="image" alt="Placeholder Image" width="500" height="500"> -->
                    </div>
                <% } %>    <%/** end Photographs */%>   

            <% }else{ %>            

                <% if (skill_name == "reading") { %>
                    Update Text for reading: <br>
                    <textarea name="text" rows="4" cols="100"><%=coText%></textarea> <p></p>     
                <% } %>    <%/** end if reading */%>   

            <% } %>    <%/** end if listening */%>          

            <% var tt = "" %>
            <% for (var id=0; id<arrQues.length; id++) { %>
                <% if (id==0) {tt = "1"} %>
                <% if (id==1) {tt = "2"} %>
                <% if (id==2) {tt = "3"} %>
                <% if (id==3) {tt = "4"} %>

                <% var content = arrQues[id].Content %>
                <% if ((partname == "Sentences") || (partname == "Text")) { %>
                    <textarea id="question" name="question" rows="4" cols="100" style="display: none;"><%=content%></textarea> <p></p>
                <% }else{ %>
                    Update question <%=tt%>: <p></p>
                    <textarea id="question" name="question" rows="4" cols="100"><%=content%></textarea> <p></p>
                <% } %>
                <% var olet = "" %>
                
                <% if (partname == "Text") { %>
                    Update options <%=tt%>: <p></p>
                <% } %>
                <% for (var index=0; index<arrQues[id].ArrOpt.length; index++) {%>
                    <% if (index == 0) {olet = "a"} %>
                    <% if (index == 1) {olet = "b"} %>
                    <% if (index == 2) {olet = "c"} %>
                    <% if (index == 3) {olet = "d"} %>

                    <%=olet%>) <input type="text" name="opt" size="100" value="<%=arrQues[id].ArrOpt[index]%>"> <p></p>
                <% } %>    <%/** end ArrOpt */%> 

                <% var result = arrQues[id].Result %><br>
                Result: <select name="result" id="result" class="styled-select">
                    <% for (var pt=0; pt<arrQues[id].ArrOpt.length; pt++) { %>
                        <% if (result == arrResult[pt]) { %> <option value="<%=result%>" selected>option <%=result%></option>
                        <% }else{ %> <option value="<%=arrResult[pt]%>">option <%=arrResult[pt]%></option>
                        <% } %>
                    <% } %>
                        </select>
                <p></p>        
            <% } %>    <%/** end ArrQues */%>    
        </div>
            <div class="btn-container">
                <input type="submit" class="btn result-btn" value="submit"/>
                <button type="button" class="btn end-btn">
                    <a href="/data/list/<%=skill_name%>/<%=part_name%>">Cancel</a>
                </button>
            </div>
            <input type="hidden" name="skill" value="<%=skill_name%>">
            <input type="hidden" name="part" value="<%=part_name%>">
            <input type="hidden" name="test" value="<%=test_name%>">
    </form>
    </body>
    <script>
        function audio_load(){
            console.log("audio")
            audio = document.getElementById("audio")
            audiofile = document.getElementById("audiofile")
            const [file] = audiofile.files
            if (file) {
                audio.src = URL.createObjectURL(file)
            }
        }
        function image_load(){
            console.log("image")
            image = document.getElementById("image")
            imagefile = document.getElementById("imagefile")
            const [file] = imagefile.files
            if (file) {
                image.src = URL.createObjectURL(file)
            }
        }

        /***** Script for audio bar *****/
        document.addEventListener('DOMContentLoaded', function () {
        const quizContainers = document.querySelectorAll('.quiz-container');

        quizContainers.forEach((container) => {
            const audioElement = container.querySelector('#audio');
            const playPauseBtn = container.querySelector('#playPauseBtn');
            const timeDisplay = container.querySelector('#timeDisplay');
            const progressBarContainer = container.querySelector('#progressBarContainer');
            const progressBar = container.querySelector('#progressBar');
            const volumeBtn = container.querySelector('#volumeBtn');

            let isDragging = false;

            // Event Listeners
            playPauseBtn.addEventListener('click', (event) => {
                event.preventDefault();
                togglePlayPause();
            });

            volumeBtn.addEventListener('click', (event) => {
                event.preventDefault();
                toggleMute();
            });

            audioElement.addEventListener('timeupdate', updateProgress);

            // Progress Bar Dragging
            progressBarContainer.addEventListener('mousedown', (event) => {
                isDragging = true;
                updateAudioTime(event);
            });

            document.addEventListener('mousemove', (event) => {
                if (isDragging) {
                    updateAudioTime(event);
                }
            });

            document.addEventListener('mouseup', () => {
                if (isDragging) {
                    isDragging = false;
                }
            });

            // Toggle Play and Pause
            function togglePlayPause() {
                if (audioElement.paused) {
                    audioElement.play();
                    playPauseBtn.innerHTML = '<svg width="24" height="24" viewBox="0 0 24 24" fill="#ff7b5c"><path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/></svg>';
                } else {
                    audioElement.pause();
                    playPauseBtn.innerHTML = '<svg width="24" height="24" viewBox="0 0 24 24" fill="#ff7b5c"><path d="M8 5v14l11-7z"/></svg>';
                }
            }

            // Toggle Mute
            function toggleMute() {
                audioElement.muted = !audioElement.muted;
                volumeBtn.innerHTML = audioElement.muted
                    ? '<svg width="24" height="24" viewBox="0 0 24 24" fill="#666"><path d="M3 9v6h4l5 5V4L7 9H3z M16 12l4 4m0-4l-4-4"/></svg>'
                    : '<svg width="24" height="24" viewBox="0 0 24 24" fill="#666"><path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02z"/></svg>';
            }

            // Update Progress Bar
            function updateProgress() {
                if (!isDragging) {
                    const currentTime = formatTime(audioElement.currentTime);
                    const duration = formatTime(audioElement.duration || 0);
                    timeDisplay.textContent = `${currentTime} / ${duration}`;

                    const percent = (audioElement.currentTime / audioElement.duration) * 100;
                    progressBar.style.width = `${percent}%`;
                }
            }

            // Update Audio Time on Drag
            function updateAudioTime(event) {
                const rect = progressBarContainer.getBoundingClientRect();
                const offsetX = event.clientX - rect.left;
                const percent = Math.min(Math.max(offsetX / rect.width, 0), 1);

                audioElement.currentTime = percent * audioElement.duration;
                progressBar.style.width = `${percent * 100}%`;

                const currentTime = formatTime(audioElement.currentTime);
                const duration = formatTime(audioElement.duration || 0);
                timeDisplay.textContent = `${currentTime} / ${duration}`;
            }

            // Format Time Display
            function formatTime(seconds) {
                const minutes = Math.floor(seconds / 60);
                const remainingSeconds = Math.floor(seconds % 60);
                return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
                }
            });
        }); /***** End script for audio bar *****/ 

        //****** Script for check change in form ******//
        document.addEventListener('DOMContentLoaded', function() {
            // Get the form and submit button
            const form = document.querySelector('form');
            const submitButton = form.querySelector('input[type="submit"]');
            
            // Store initial form values
            const initialValues = {};
            
            // Function to collect all form values
            function collectFormValues() {
                const elements = form.elements;
                for (let i = 0; i < elements.length; i++) {
                    const element = elements[i];
                    if (element.name) {
                        if (element.type === 'file') {
                            initialValues[element.name] = element.files.length > 0 ? element.files[0].name : '';
                        } else if (element.type === 'radio' || element.type === 'checkbox') {
                            initialValues[element.name] = element.checked;
                        } else {
                            initialValues[element.name] = element.value;
                        }
                    }
                }
            }
            
            // Function to check if form has changed
            function checkFormChanges() {
                const elements = form.elements;
                for (let i = 0; i < elements.length; i++) {
                    const element = elements[i];
                    if (element.name) {
                        if (element.type === 'file') {
                            const currentValue = element.files.length > 0 ? element.files[0].name : '';
                            if (currentValue !== initialValues[element.name]) {
                                return true;
                            }
                        } else if (element.type === 'radio' || element.type === 'checkbox') {
                            if (element.checked !== initialValues[element.name]) {
                                return true;
                            }
                        } else if (element.value !== initialValues[element.name]) {
                            return true;
                        }
                    }
                }
                return false;
            }
            
            // Initialize
            collectFormValues();
            submitButton.disabled = true;
            
            // Add event listeners to all form elements
            const elements = form.elements;
            for (let i = 0; i < elements.length; i++) {
                const element = elements[i];
                element.addEventListener('change', function() {
                    submitButton.disabled = !checkFormChanges();
                });
                
                // For text inputs, also check on input event for immediate feedback
                if (element.type === 'text' || element.type === 'textarea') {
                    element.addEventListener('input', function() {
                        submitButton.disabled = !checkFormChanges();
                    });
                }
            }
            
            // Special handling for file inputs that are updated via other functions
            const audioFileInput = document.getElementById('audiofile');
            const imageFileInput = document.getElementById('imagefile');
            
            // Override the audio_load and image_load functions to include our check
            const originalAudioLoad = window.audio_load;
            window.audio_load = function() {
                originalAudioLoad();
                submitButton.disabled = !checkFormChanges();
            };
            
            const originalImageLoad = window.image_load;
            window.image_load = function() {
                originalImageLoad();
                submitButton.disabled = !checkFormChanges();
            };
        });//******* End of form check script *******//
    </script>
</html>